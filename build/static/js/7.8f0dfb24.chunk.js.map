{"version":3,"sources":["components/ui/FormInput.js","pages/moviesPage/MoviesPage.js","components/requests.js","components/ui/Btn.js","components/ui/moviesListCard.js","components/moviesList/MoviesList.js"],"names":["FormInput","name","handleChange","TextField","id","label","type","onChange","variant","MoviesPage","useState","searchValue","setSearchValue","searchList","setSearchList","history","useHistory","location","useLocation","handleSubmitForm","e","a","preventDefault","form","target","push","pathname","search","searchByName","data","reset","useEffect","query","queryString","parse","onSubmit","className","value","Btn","icon","length","MoviesList","movies","API_KEY","axios","defaults","baseURL","getPopularMovies","get","results","console","log","getMovieDetails","getMovieCast","cast","getMovieReview","useStyles","makeStyles","theme","button","margin","spacing","handleClick","classes","color","endIcon","onClick","root","width","media","height","paddingTop","MoviesListCard","poster_path","title","original_name","Card","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","component","map","el","key","to","state","from"],"mappings":"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","file":"static/js/7.8f0dfb24.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\n\nexport  function FormInput({name,handleChange}) {\n\n  return (\n        <TextField \n        id=\"outlined-search\" \n        label={name}\n        type='text'\n        name={name}\n        onChange={handleChange}\n        variant=\"outlined\" />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { Btn } from \"../../components/ui/Btn\";\nimport { FormInput } from \"../../components/ui/FormInput\";\nimport { MoviesList } from \"../../components/moviesList/MoviesList\";\nimport { searchByName } from \"../../components/requests\";\n\nconst MoviesPage = () => {\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [searchList, setSearchList] = useState([]);\n  const history = useHistory();\n  const location = useLocation();\n\n  const handleSubmitForm = async (e) => {\n    e.preventDefault();\n    if (searchValue === \"\") {\n      return;\n    } else {\n      const form = e.target;\n      history.push({\n        pathname: location.pathname,\n        search: `query=${searchValue}`,\n      });\n      const data = await searchByName(searchValue);\n      setSearchList(data);\n      form.reset();\n    }\n  };\n\n  useEffect(() => {\n    const query = queryString.parse(location.search);\n    if (!query.query) {\n      return;\n    } else {\n      (async () => {\n        const data = await searchByName(query.query);\n        setSearchList(data);\n      })();\n    }\n  }, [location.search]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmitForm} className=\"form\">\n        <FormInput\n          name=\"Enter the title\"\n          handleChange={({ target: { value } }) => {\n            setSearchValue(value);\n          }}\n        />\n        <Btn label=\"search\" type=\"submit\" icon=\"send\" />\n      </form>\n      {location.search && searchList.length > 0 && (\n        <MoviesList movies={searchList} />\n      )}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = '7f0b5ab01080cb0bb4b9db0d9bc41efa'\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\nexport const getPopularMovies = async () => {\n  try{\n    const {data} = await axios.get(`/trending/all/day?api_key=${API_KEY}`)\n    return data.results;\n  }catch(e) {console.log(e)};\n}\n\nexport const searchByName = async (search) => {\n  try{\n    const {data} = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`)\n    return data.results\n  }catch(e) {console.log(e)};\n}\nexport const getMovieDetails = async (id) => {\n  try{\n    const {data} = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return data\n  }catch(e) {console.log(e)};\n}\nexport const getMovieCast = async (id) => {\n  try{\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`)\n    return data.cast;\n  }catch(e) {console.log(e)};\n}\nexport const getMovieReview = async (id) => {\n  try{\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return data.results;\n  }catch(e) {console.log(e)};\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\n\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport function Btn({label, type, handleClick, icon}) {\n  const classes = useStyles();\n\n  return (\n    <>\n      {/* This Button uses a Font Icon, see the installation instructions in the Icon component docs. */}\n        <Button\n          type={type}\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.button}\n          endIcon={<Icon>{icon}</Icon>}\n          onClick={handleClick}\n        >\n          {label}\n        </Button>\n      </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 345,\n    margin: 20,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"100%\",\n  },\n});\n\nexport function MoviesListCard({ poster_path, title, original_name, id }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `https://medieval.gumlet.net/wp-content/uploads/2015/06/Norfolk-Graffiti-Project-Survey-6-300x415.jpg?compress=true&quality=80&w=320&dpr=2.6`\n          }\n          title={title || original_name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title || original_name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { MoviesListCard } from \"../ui/moviesListCard\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {movies.map((el) => {\n          return (\n            <li key={el.id}>\n              <Link\n                to={{\n                  pathname: `movies/${el.id}`,\n                  state: {\n                    from: location.pathname,\n                    query: location.search,\n                  },\n                }}\n              >\n                <MoviesListCard {...el} />\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n"],"sourceRoot":""}