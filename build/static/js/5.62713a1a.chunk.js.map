{"version":3,"sources":["../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/Paper/Paper.js","../node_modules/@material-ui/core/esm/CardActionArea/CardActionArea.js","../node_modules/@material-ui/core/esm/CardMedia/CardMedia.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/Typography/Typography.js","pages/homePage/HomePage.js","components/requests.js","components/ui/moviesListCard.js","components/moviesList/MoviesList.js"],"names":["Card","React","props","ref","classes","className","_props$raised","raised","other","_objectWithoutProperties","Paper","_extends","clsx","root","elevation","withStyles","overflow","name","_props$component","component","Component","_props$square","square","_props$elevation","_props$variant","variant","outlined","concat","rounded","theme","elevations","shadows","forEach","shadow","index","boxShadow","backgroundColor","palette","background","paper","color","text","primary","transition","transitions","create","borderRadius","shape","border","divider","CardActionArea","children","focusVisibleClassName","ButtonBase","focusVisible","focusHighlight","display","textAlign","width","opacity","action","hoverOpacity","pointerEvents","position","top","right","bottom","left","duration","short","MEDIA_COMPONENTS","CardMedia","image","src","style","isMediaComponent","indexOf","composedStyle","backgroundImage","media","img","undefined","backgroundSize","backgroundRepeat","backgroundPosition","objectFit","CardContent","padding","paddingBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","Typography","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variantMapping","variantMapping","capitalize","margin","typography","caption","button","overline","srOnly","height","alignLeft","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","main","colorSecondary","secondary","colorTextPrimary","colorTextSecondary","colorError","error","displayInline","displayBlock","HomePage","useState","movies","setMovies","useEffect","a","getPopularMovies","data","API_KEY","axios","defaults","baseURL","get","results","console","log","searchByName","search","getMovieDetails","id","getMovieCast","cast","getMovieReview","useStyles","makeStyles","paddingTop","MoviesListCard","poster_path","title","original_name","MoviesList","location","useLocation","map","el","key","to","pathname","state","from","query"],"mappings":"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","file":"static/js/5.62713a1a.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Shadow depth, corresponds to `dp` in the spec.\n   * It accepts values between 0 and 24 inclusive.\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * If `true`, rounded corners are disabled.\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      textAlign: 'inherit',\n      width: '100%',\n      '&:hover $focusHighlight': {\n        opacity: theme.palette.action.hoverOpacity\n      },\n      '&$focusVisible $focusHighlight': {\n        opacity: 0.12\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the action area is keyboard focused. */\n    focusVisible: {},\n\n    /* Styles applied to the overlay that covers the action area when it is keyboard focused. */\n    focusHighlight: {\n      overflow: 'hidden',\n      pointerEvents: 'none',\n      position: 'absolute',\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0,\n      borderRadius: 'inherit',\n      opacity: 0,\n      backgroundColor: 'currentcolor',\n      transition: theme.transitions.create('opacity', {\n        duration: theme.transitions.duration.short\n      })\n    }\n  };\n};\nvar CardActionArea = /*#__PURE__*/React.forwardRef(function CardActionArea(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      focusVisibleClassName = props.focusVisibleClassName,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"focusVisibleClassName\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(focusVisibleClassName, classes.focusVisible),\n    ref: ref\n  }, other), children, /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.focusHighlight\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActionArea.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActionArea'\n})(CardActionArea);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { chainPropTypes } from '@material-ui/utils';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'block',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center'\n  },\n\n  /* Styles applied to the root element if `component=\"video, audio, picture, iframe, or img\"`. */\n  media: {\n    width: '100%'\n  },\n\n  /* Styles applied to the root element if `component=\"picture or img\"`. */\n  img: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: 'cover'\n  }\n};\nvar MEDIA_COMPONENTS = ['video', 'audio', 'picture', 'iframe', 'img'];\nvar CardMedia = /*#__PURE__*/React.forwardRef(function CardMedia(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      image = props.image,\n      src = props.src,\n      style = props.style,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"image\", \"src\", \"style\"]);\n\n  var isMediaComponent = MEDIA_COMPONENTS.indexOf(Component) !== -1;\n  var composedStyle = !isMediaComponent && image ? _extends({\n    backgroundImage: \"url(\\\"\".concat(image, \"\\\")\")\n  }, style) : style;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, isMediaComponent && classes.media, \"picture img\".indexOf(Component) !== -1 && classes.img),\n    ref: ref,\n    style: composedStyle,\n    src: isMediaComponent ? image || src : undefined\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? CardMedia.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node, function (props) {\n    if (!props.children && !props.image && !props.src && !props.component) {\n      return new Error('Material-UI: Either `children`, `image`, `src` or `component` prop must be specified.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Image to be displayed as a background image.\n   * Either `image` or `src` prop must be specified.\n   * Note that caller must specify height otherwise the image will not be visible.\n   */\n  image: PropTypes.string,\n\n  /**\n   * An alias for `image` property.\n   * Available only with media components.\n   * Media components: `video`, `audio`, `picture`, `iframe`, `img`.\n   */\n  src: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardMedia'\n})(CardMedia);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);","import React, { useState, useEffect } from \"react\";\nimport { MoviesList } from \"../../components/moviesList/MoviesList\";\nimport { getPopularMovies } from \"../../components/requests\";\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const data = await getPopularMovies();\n      setMovies(data);\n    })();\n  }, []);\n\n  return (\n    <>\n      {/* <MoviesPage/> */}\n      <MoviesList movies={movies} />\n    </>\n  );\n};\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = '7f0b5ab01080cb0bb4b9db0d9bc41efa'\naxios.defaults.baseURL='https://api.themoviedb.org/3'\n\nexport const getPopularMovies = async () => {\n  try{\n    const {data} = await axios.get(`/trending/all/day?api_key=${API_KEY}`)\n    return data.results;\n  }catch(e) {console.log(e)};\n}\n\nexport const searchByName = async (search) => {\n  try{\n    const {data} = await axios.get(`/search/movie?api_key=${API_KEY}&language=en-US&query=${search}&page=1&include_adult=false`)\n    return data.results\n  }catch(e) {console.log(e)};\n}\nexport const getMovieDetails = async (id) => {\n  try{\n    const {data} = await axios.get(`/movie/${id}?api_key=${API_KEY}&language=en-US`)\n    return data\n  }catch(e) {console.log(e)};\n}\nexport const getMovieCast = async (id) => {\n  try{\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`)\n    return data.cast;\n  }catch(e) {console.log(e)};\n}\nexport const getMovieReview = async (id) => {\n  try{\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n    return data.results;\n  }catch(e) {console.log(e)};\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: 345,\n    margin: 20,\n  },\n  media: {\n    height: 0,\n    paddingTop: \"100%\",\n  },\n});\n\nexport function MoviesListCard({ poster_path, title, original_name, id }) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\n              : `https://medieval.gumlet.net/wp-content/uploads/2015/06/Norfolk-Graffiti-Project-Survey-6-300x415.jpg?compress=true&quality=80&w=320&dpr=2.6`\n          }\n          title={title || original_name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title || original_name}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { MoviesListCard } from \"../ui/moviesListCard\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nexport function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {movies.map((el) => {\n          return (\n            <li key={el.id}>\n              <Link\n                to={{\n                  pathname: `movies/${el.id}`,\n                  state: {\n                    from: location.pathname,\n                    query: location.search,\n                  },\n                }}\n              >\n                <MoviesListCard {...el} />\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n"],"sourceRoot":""}